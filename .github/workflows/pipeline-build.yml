name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:        
        java-version: 17
        distribution: temurin

    - name: Restore dependencies
      run: dotnet restore src/Spezi.Api/Spezi.Api.csproj

    - name: Setup SonarCloud Scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Install dotnet-coverage
      run: dotnet tool install --global dotnet-coverage

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Build and Test with Sonar Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        PROJECT_KEY: ${{ secrets.PROJECT_KEY }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      run: |
        dotnet-sonarscanner begin /k:"$PROJECT_KEY" /o:"$SONAR_ORGANIZATION" /d:sonar.token="$SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=./TestResults/CoverageReport/coverage.cobertura.xml /d:sonar.exclusions="**.Database/**,**.Tests/**,**.Common*/**,**.WebApi*/**" /d:sonar.scanner.skipJreProvisioning=true

        dotnet build src/Spezi.Api/Spezi.Api.csproj --configuration Release

        dotnet test src/Spezi.Api/Spezi.Api.csproj --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults
        
        reportgenerator -reports:./TestResults/**/coverage.cobertura.xml -targetdir:./TestResults/CoverageReport -reporttypes:Cobertura
        
        ls -R ./TestResults

        dotnet-sonarscanner end /d:sonar.token="$SONAR_TOKEN"
